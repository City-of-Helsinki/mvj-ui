import type { Action, Attributes, Methods } from "../types";
export type LandUseContractState = {
  attributes: Attributes;
  current: LandUseContract;
  isEditMode: boolean;
  isFetching: boolean;
  isFetchingAttributes: boolean;
  isFormValidById: Record<string, any>;
  isSaveClicked: boolean;
  list: LandUseContractList;
  methods: Methods;
};
export type FetchSingleLandUseContractAfterEditPayload = {
  id: any;
  callbackFunctions?: Array<Record<string, any> | ((...args: Array<any>) => any)>;
};
export type InvoiceListMap = Record<string, any>;
export type LandUseContract = Record<string, any>;
export type LandUseContractList = Record<string, any>;
export type LandUseContractId = number;
export type FetchAttributesAction = Action<"mvj/landUseContract/FETCH_ATTRIBUTES", void>;
export type ReceiveAttributesAction = Action<"mvj/landUseContract/RECEIVE_ATTRIBUTES", Attributes>;
export type AttributesNotFoundAction = Action<"mvj/landUseContract/ATTRIBUTES_NOT_FOUND", void>;
export type ReceiveMethodsAction = Action<"mvj/landUseContract/RECEIVE_METHODS", Methods>;
export type FetchLandUseContractListAction = Action<"mvj/landUseContract/FETCH_ALL", string>;
export type ReceiveLandUseContractListAction = Action<"mvj/landUseContract/RECEIVE_ALL", LandUseContractList>;
export type FetchSingleLandUseContractAction = Action<"mvj/landUseContract/FETCH_SINGLE", LandUseContractId>;
export type ReceiveSingleLandUseContractAction = Action<"mvj/landUseContract/RECEIVE_SINGLE", LandUseContract>;
export type FetchSingleLandUseContractAfterEditAction = Action<"mvj/landUseContract/FETCH_SINGLE_AFTER_EDIT", FetchSingleLandUseContractAfterEditPayload>;
export type DeleteLandUseContractAction = Action<"mvj/landUseContract/DELETE", LandUseContractId>;
export type CreateLandUseContractAction = Action<"mvj/landUseContract/CREATE", LandUseContract>;
export type EditLandUseContractAction = Action<"mvj/landUseContract/EDIT", LandUseContract>;
export type LandUseContractNotFoundAction = Action<"mvj/landUseContract/NOT_FOUND", void>;
export type ReceiveIsSaveClickedAction = Action<"mvj/landUseContract/RECEIVE_SAVE_CLICKED", boolean>;
export type HideEditModeAction = Action<"mvj/landUseContract/HIDE_EDIT", void>;
export type ShowEditModeAction = Action<"mvj/landUseContract/SHOW_EDIT", void>;
export type ReceiveFormValidFlagsAction = Action<"mvj/landUseContract/RECEIVE_FORM_VALID_FLAGS", Record<string, any>>;
export type ClearFormValidFlagsAction = Action<"mvj/landUseContract/CLEAR_FORM_VALID_FLAGS", void>;
export type ReceiveCollapseStatesAction = Action<"mvj/landUseContract/RECEIVE_COLLAPSE_STATES", Record<string, any>>;