import type { Action, Attributes, Methods } from "types";
import type { LeaseId } from "leases/types";
export type CommentState = {
  attributes: Attributes;
  byLease: Record<string, any>;
  isEditModeById: Record<string, any>;
  isFetching: boolean;
  isFetchingAttributes: boolean;
  isSaveClicked: boolean;
  methods: Methods;
};
export type Comment = Record<string, any>;
export type CommentList = Array<Record<string, any>>;
export type CommentListMap = Record<string, Record<string, any>>;
export type CommentId = number;
export type FetchAttributesAction = Action<string, void>;
export type ReceiveAttributesAction = Action<string, Attributes>;
export type ReceiveMethodsAction = Action<string, Methods>;
export type FetchCommentsByLeaseAction = Action<string, LeaseId>;
export type ReceiveCommentsByLeaseAction = Action<string, Comment>;
export type CreateCommentAction = Action<string, Comment>;
export type EditCommentAction = Action<string, Comment>;
export type ClearEditFlagsAction = Action<string, void>;
export type HideEditModeByIdAction = Action<string, CommentId>;
export type ShowEditModeByIdAction = Action<string, CommentId>;
export type ReceiveIsSaveClickedAction = Action<string, boolean>;
export type CommentAttributesNotFoundAction = Action<string, void>;
export type CommentNotFoundAction = Action<string, void>;